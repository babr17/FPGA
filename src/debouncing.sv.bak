module debouncing (
input KEY0, KEY1,
input clk, rst_n
);

logic[2:0] key0_d = '0, key1_d = '0; 
logic key0, key1;

lways @(posedge clk or negedge rst_n) 
    if (!rst_n) begin 
      key0_d <= '0; 
      key1_d <= '0; 
    end 
    else begin 
      key0_d <= {key0_d[1:0], ~KEY0}; 
      key1_d <= {key1_d[1:0], ~KEY1}; 
   
  key0 <= ~key0_d[2] & key0_d[1]; 
  key1 <= ~key1_d[2] & key1_d[1]; 
endmodule  